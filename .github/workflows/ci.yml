name: Continuous Integration

on:
  pull_request:
    branches: [main]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: .

      - name: Run unit tests with coverage
        run: |
          pip install pytest pytest-cov
          pytest --cov=src tests/unit
        working-directory: .
        env:
          CONNECT_STRING: "sqlite:///:memory:"
          PORT: ${{ secrets.PORT }}
          EXP_DATE: ${{ secrets.EXP_DATE }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
          BASE_URL: ${{ secrets.BASE_URL }}
          SALT_KEY: ${{ secrets.SALT_KEY }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EXP_SERIALIZER: ${{ secrets.EXP_SERIALIZER }}

  bdd-test:
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: .

      - name: Start server
        run: |
          python server.py &
          for i in {1..10}; do
            if curl -s http://localhost:8000/health; then
              break
            fi
            sleep 2
          done
        env:
          CONNECT_STRING: "sqlite:///:memory:"
          PORT: ${{ secrets.PORT }}
          EXP_DATE: ${{ secrets.EXP_DATE }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
          BASE_URL: ${{ secrets.BASE_URL }}
          SALT_KEY: ${{ secrets.SALT_KEY }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EXP_SERIALIZER: ${{ secrets.EXP_SERIALIZER }}

      - name: Run BDD tests
        run: |
          pytest tests/bdd/test_create_user.py && pytest tests/bdd/test_verify_email.py && pytest tests/bdd/test_auth_user.py && pytest tests/bdd/test_auth_verify.py && pytest tests/bdd/test_password_recover.py && pytest tests/bdd/test_password_reset.py
